Assignment 2: CronJob

1. go to cronjob.yaml (/root/kubernetes-training/04-controllers)
2. Open the file and change the 1st line to (apiVersion: batch/v1beta1).

[root@ip-172-31-31-54 kubernetes-training]# cd 04-controllers/
[root@ip-172-31-31-54 04-controllers]# vi cronjob.yaml

# editted 1st line to apiVersion: batch/v1beta1
# after editting, hitting cat cronjob.yaml

[root@ip-172-31-31-54 04-controllers]# cat cronjob.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: batch-job-every-fifteen-minutes
spec:
  schedule: "0,15,30,45 * * * *"
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: periodic-batch-job
        spec:
          restartPolicy: OnFailure
          containers:
          - name: main
            image: luksa/batch-job
[root@ip-172-31-31-54 04-controllers]#

3. Run this file

[root@ip-172-31-31-54 04-controllers]# kubectl create -f cronjob.yaml
cronjob.batch/batch-job-every-fifteen-minutes created

4. Find out what is the command to "get" the running jobs.
5. Observe and if possible, paste the results from your practicals.

[root@ip-172-31-31-54 04-controllers]# kubectl get cronjob
NAME                              SCHEDULE             SUSPEND   ACTIVE   LAST SCHEDULE   AGE
batch-job-every-fifteen-minutes   0,15,30,45 * * * *   False     0        <none>          3m2s
[root@ip-172-31-31-54 04-controllers]#

6. Also identify how you would "permanently arrest" the jobs from running.

It can be done by editting the current cronjob resource to include the .spec.suspend field and update it to true.

7. What is the change from normal Jobs (jobs v/s cronJobs) - Your observation in one sentence.

Jobs are used to create one or more pods and it makes sure that they perform specific tasks they are assigned to. CronJobs do the same thing, but they run tasks based on a defined schedule like creating repetitive tasks.
